module.exports = {
    // Styles
    'style:style': function(node, styles) {
        // Set initial style state
        var name = node.attributes['style:name'];
        var type = node.attributes['style:family'];

        styles[type] = styles[type] || {};
        styles[type][name] = styles[type][name] || [];

        // Set current style configuration if more to come
        if (!node.isSelfClosing) {
            styles.currentStyle = {
                name: name,
                type: type
            };
        }
    },
    // Text decoration
    'style:text-properties': function(node, styles) {
        // Add <strong> and <em> tags to current style if needed
        var fontWeight   = node.attributes['fo:font-weight'];
        var fontStyle    = node.attributes['fo:font-style'];
        var currentStyle = styles.currentStyle;

        if (!!fontWeight && fontWeight == 'bold') {
            styles[currentStyle.type][currentStyle.name].push('strong');
        }
        if (!!fontStyle && fontStyle == 'italic') {
            styles[currentStyle.type][currentStyle.name].push('em');
        }
    },
    // List types
    'text:list-style': function(node, styles) {
        // Set initial style state
        var name = node.attributes['style:name'];
        styles['lists'][name] = styles['lists'][name] || {};

        // Set current style configuration if more to come
        if (!node.isSelfClosing) {
            styles.currentStyle = {
                name: name,
                type: 'lists'
            };
        }
    },
    'text:list-level-style-bullet': function(node, styles) {
        // Set current list style as <ul> if not set
        var currentStyle = styles.currentStyle;
        styles['lists'][currentStyle.name].tag = styles['lists'][currentStyle.name].tag || 'ul';
    },
    'text:list-level-style-number': function(node, styles) {
        // Set current list style as <ol> if not set
        var currentStyle = styles.currentStyle;
        styles['lists'][currentStyle.name].tag = styles['lists'][currentStyle.name].tag || 'ol';
    }
};